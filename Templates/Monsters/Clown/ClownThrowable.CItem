ClownThrowable.Mesh = "kulkaaShape"
ClownThrowable.Pack = "kulka.dat"


ClownThrowable.Health = 22
ClownThrowable.Scale = 0.2
ClownThrowable.Restitution = 0.0 	-- sprezystosc
ClownThrowable.LinearDamping = 0.4
ClownThrowable.AngularDamping = 0.9
ClownThrowable.TimeToLive = 120 * 30

ClownThrowable.distance = 4.0		-- zasieg aktywacji
ClownThrowable.nailsCount = 20
ClownThrowable.nailsVel = 20
ClownThrowable.moveUpVel = 8.4

ClownThrowable.ExplodeItems = "Nail.CItem"
o._fx = "sado_ClownThrowable"
o.Mass = 150


o.hoodElements = 6

function ClownThrowable:OnCreateEntity()
    --local pfx = AddPFX(self.fx,0.15)
    --ENTITY.RegisterChild(self._Entity,pfx)    
end

function ClownThrowable:OnCreateEntity()
--	self:PO_Create(BodyTypes.Simple,0.2)
	self:PO_Create(BodyTypes.FromMesh,nil,ECollisionGroups.Noncolliding)
	self.timer = 4
	self.mode = 0
--	self._enabled = true
end

function ClownThrowable:OnDamage()
	self._damaged = true
end

function o:OnUpdate()
	if self.timer then
		self.timer = self.timer - 1
		if self.timer < 0 then
			Game:Print("MOLOTOW enable col")
			ENTITY.PO_SetCollisionGroup(self._Entity, ECollisionGroups.HCGNormalNCWithSelf)
			ENTITY.EnableCollisions(self._Entity, true)
			self.timer = nil
		end
	end
end

function o:OnCollision(x,y,z,nx,ny,nz,e)
	-- tu tworzy "gas" w roznych kierunkach
	--AddPFX(self.destroyPFX,0.3, Vector:New(x,y,z))

    local amount = self.hoodElements
    for i=1,amount do
        local obj = GObjects:Add(TempObjName(),CloneTemplate("ClownHood.CItem"))
        obj.ObjOwner = self.ObjOwner
        obj.Pos.X = x + nx * 0.5 + FRand(-0.5, 0.5)
        obj.Pos.Y = y + ny * 0.5 + i*0.05
        obj.Pos.Z = z + nz * 0.5 + FRand(-0.5, 0.5)

        --table.insert(self.ObjOwner.debugHIT, {obj.Pos.X, obj.Pos.Y, obj.Pos.Z})
        
        if i == amount then
            obj.TimeToLive = obj.TimeToLive * 1.2
            obj.sound = "impacts/barrel-wood-fire-loop"
        else
            obj.sound = nil
            obj.TimeToLive = FRand(obj.TimeToLive * 0.8, obj.TimeToLive * 1.1)
        end
        obj:Apply()
        obj:Synchronize()
    end
    ENTITY.EnableCollisions(self._Entity, false)
    GObjects:ToKill(self)
end
